library(devtools)
document()
document()
document()
document()
library(HRInterval)
document()
library(HRInterval)
library(devtools)
document()
library(HRInterval)
library(HRInterval)
library(HRInterval)
library(HRInterval)
library(HRInterval)
library(HRInterval)
library(HRInterval)
library(HRInterval)
library(HRInterval)
?forecast
?arima
?Arima
Encuesta <- 'E30163'
UnidadHorizontal <- TRUE
MesInicial <- 'MM012018'
MesFinal <- 'MM032018'
Base <- ''
Base <- '2015'
FicherosDatos <- scan('G:/GRUPO_SINODO_METODOLOGIA/MicrodataRepo/Macros_Scripts/FicherosDatos_ETV.txt', what = 'character')
FicherosDatos
FicherosDatos <- gsub('\\\\', '/', FicherosDatos)
FicherosDatos <- unlist(lapply(FicherosDatos, gdata::trim))
FicherosDatos
library(HRInterval)
remove.packages("HRInterval")
library(HRInterval)
CRAN_mirror <- "https://cran.rstudio.com/"
local_repo <- 'G:/GRUPO_SINODO_METODOLOGIA/miniCRAN'
tools::write_PACKAGES(dir = file.path(local_repo, 'src/contrib'),
type = 'source')
miniCRAN::addLocalPackage(pkgs = "HRInterval",
pkgPath = file.path('N:/UDMTD/UDTMDCOM/DepSel.SoftwareR/INE.Packages.v2/LastVersions'),
path = file.path(local_repo),
type = "source",
Rversion = R.version,
writePACKAGES = TRUE,
deps = FALSE,
quiet = FALSE,
build = FALSE)
library(HRInterval)
remove.packages("HRInterval")
library(HRInterval)
CRAN_mirror <- "https://cran.rstudio.com/"
local_repo <- 'G:/GRUPO_SINODO_METODOLOGIA/miniCRAN'
tools::write_PACKAGES(dir = file.path(local_repo, 'src/contrib'),
type = 'source')
miniCRAN::addLocalPackage(pkgs = "HRInterval",
pkgPath = file.path('N:/UDMTD/UDTMDCOM/DepSel.SoftwareR/INE.Packages.v2/LastVersions'),
path = file.path(local_repo),
type = "source",
Rversion = R.version,
writePACKAGES = TRUE,
deps = FALSE,
quiet = FALSE,
build = FALSE)
remove.packages("HRInterval")
library(HRInterval)
CRAN_mirror <- "https://cran.rstudio.com/"
local_repo <- 'G:/GRUPO_SINODO_METODOLOGIA/miniCRAN'
tools::write_PACKAGES(dir = file.path(local_repo, 'src/contrib'),
type = 'source')
miniCRAN::addLocalPackage(pkgs = "HRInterval",
pkgPath = file.path('N:/UDMTD/UDTMDCOM/DepSel.SoftwareR/INE.Packages.v2/LastVersions'),
path = file.path(local_repo),
type = "source",
Rversion = R.version,
writePACKAGES = TRUE,
deps = FALSE,
quiet = FALSE,
build = FALSE)
library(HRInterval)
devtools::load_all(".")
devtools::load_all(".")
devtools::documents()
devtools::document()
devtools::load_all(".")
devtools::document()
library(HRInterval)
load("C:/Worspace.FL.E30183.MM072018.RData")
Encuesta
Edit
VarAnalisis_R
var
HRFactorParam.list
HRIntervalParam
LastFactorEdit
output <- lapply(seq(along = Edit[[var]]), function(edit){
print(Edit[[var]][[edit]])
out <- if (substr(VarAnalisis_R[var], 1, 5) == 'logit') {
auxPeriods <- getPeriods(FF.StQList)
auxPeriods <- auxPeriods[-(1:lag.Data)]
auxFF.StQList <- subPeriods(FF.StQList, auxPeriods)
HRInterval(auxFF.StQList, FG.StQList, FL.StQList, HRIntervalParam[[edit]])
} else {
HRInterval(FF.StQList, FG.StQList, FL.StQList, HRIntervalParam[[edit]])
}
setnames(out, c('Lower', 'Upper', 'HRFactor'), c(IntervalsLimits_R, Factor_R))
out <- melt_StQ(out, DD)
out[, IDEdit := Edit[[var]][edit]]
return(out)
})
library(data.table)
library(StQ)
output <- lapply(seq(along = Edit[[var]]), function(edit){
print(Edit[[var]][[edit]])
out <- if (substr(VarAnalisis_R[var], 1, 5) == 'logit') {
auxPeriods <- getPeriods(FF.StQList)
auxPeriods <- auxPeriods[-(1:lag.Data)]
auxFF.StQList <- subPeriods(FF.StQList, auxPeriods)
HRInterval(auxFF.StQList, FG.StQList, FL.StQList, HRIntervalParam[[edit]])
} else {
HRInterval(FF.StQList, FG.StQList, FL.StQList, HRIntervalParam[[edit]])
}
setnames(out, c('Lower', 'Upper', 'HRFactor'), c(IntervalsLimits_R, Factor_R))
out <- melt_StQ(out, DD)
out[, IDEdit := Edit[[var]][edit]]
return(out)
})
output
output[[1]][is.na(Value)]
output[[1]]
output[[1]][is.na('Value')]
output[[1]][Value == '0.0']
output[[1]][Value == 0.0]
output[[1]][is.nan(Value)]
output[[2]][is.nan(Value)]
output[[3]][is.nan(Value)]
IntervalTable
Edit[[var]]
HRInterval(FF.StQList, FG.StQList, FL.StQList, HRIntervalParam[['EMP_W_3']])
HRIntervalParam[['EMP_W_3']]
HRIntervalParam[[3]]
HRInterval(FF.StQList, FG.StQList, FL.StQList, HRIntervalParam[[3]])
IntervalDomainHitRate(FF.StQList[[PeriodoFinal]], FG.StQList[[PeriodoFinal]], FL.StQList[[PeriodoFinal]], HRDomainParam)
HRDomainParam <- new(Class = 'HRDomainParam', VarRoles = list(Units = IDQuals,
ObjVariable = HRIntervalParam@VarName,
Domains = HRIntervalParam@DomainNames,
IntervalsLimits = HRIntervalParam@IntervalsLimits,
EditName = HRIntervalParam@Edit))
HRDomainParam <- new(Class = 'HRDomainParam', VarRoles = list(Units = 'NOrden',
ObjVariable = HRIntervalParam@VarName,
Domains = HRIntervalParam@DomainNames,
IntervalsLimits = HRIntervalParam@IntervalsLimits,
EditName = HRIntervalParam@Edit))
HRIntervalParam
HRDomainParam <- new(Class = 'HRDomainParam', VarRoles = list(Units = 'NOrden',
ObjVariable = HRIntervalParam[[1]]@VarName,
Domains = HRIntervalParam[[1]]@DomainNames,
IntervalsLimits = HRIntervalParam[[1]]@IntervalsLimits,
EditName = HRIntervalParam[[1]]@Edit))
IntervalDomainHitRate(FF.StQList[[PeriodoFinal]], FG.StQList[[PeriodoFinal]], FL.StQList[[PeriodoFinal]], HRDomainParam)
dm <- IntervalDomainHitRate(FF.StQList[[PeriodoFinal]], FG.StQList[[PeriodoFinal]], FL.StQList[[PeriodoFinal]], HRDomainParam)
dm
dm
devtools::load_all(".")
dm <- IntervalDomainHitRate(FF.StQList[[PeriodoFinal]], FG.StQList[[PeriodoFinal]], FL.StQList[[PeriodoFinal]], HRDomainParam)
devtools::load_all(".")
dm <- IntervalDomainHitRate(FF.StQList[[PeriodoFinal]], FG.StQList[[PeriodoFinal]], FL.StQList[[PeriodoFinal]], HRDomainParam)
dm
dm
devtools::load_all(".")
dm
dm <- IntervalDomainHitRate(FF.StQList[[PeriodoFinal]], FG.StQList[[PeriodoFinal]], FL.StQList[[PeriodoFinal]], HRDomainParam)
dm
dm
devtools::load_all(".")
dm1 <- IntervalDomainHitRate(FF.StQList[[PeriodoFinal]], FG.StQList[[PeriodoFinal]], FL.StQList[[PeriodoFinal]], HRDomainParam)
dm1
dm1
dm1[is.nan(IntervHRDomain)]
dm1[is.na(IntervHRDomain)]
dm1[is.na(IntervCHRDomain)]
dm1[is.nan(IntervCHRDomain)]
dm1[!is.nan(IntervCHRDomain)]
devtools::load_all(".")
dm <- IntervalDomainHitRate(FF.StQList[[PeriodoFinal]], FG.StQList[[PeriodoFinal]], FL.StQList[[PeriodoFinal]], HRDomainParam)
dm
dm
dm3 <- IntervalDomainHitRate(FF.StQList[[PeriodoFinal]], FG.StQList[[PeriodoFinal]], FL.StQList[[PeriodoFinal]], HRDomainParam)
dm3
dm3
dm3[IntervHRDomain != 1]
dm3[IntervCHRDomain != 0]
devtools::load_all(".")
out3 <- IntervalDomainHitRate(FF.StQList[[PeriodoFinal]], FG.StQList[[PeriodoFinal]], FL.StQList[[PeriodoFinal]], HRDomainParam)
out3
out3
out3[IntervCHRDomain != 0]
out3[!is.nan(IntervCHRDomain)]
out3[!is.nan(IntervHRDomain)]
devtools::load_all(".")
HRIntervalParam
output <- lapply(seq(along = Edit[[var]]), function(edit){
print(Edit[[var]][[edit]])
out <- if (substr(VarAnalisis_R[var], 1, 5) == 'logit') {
auxPeriods <- getPeriods(FF.StQList)
auxPeriods <- auxPeriods[-(1:lag.Data)]
auxFF.StQList <- subPeriods(FF.StQList, auxPeriods)
HRInterval(auxFF.StQList, FG.StQList, FL.StQList, HRIntervalParam[[edit]])
} else {
HRInterval(FF.StQList, FG.StQList, FL.StQList, HRIntervalParam[[edit]])
}
setnames(out, c('Lower', 'Upper', 'HRFactor'), c(IntervalsLimits_R, Factor_R))
out <- melt_StQ(out, DD)
out[, IDEdit := Edit[[var]][edit]]
return(out)
})
devtools::document()
devtools::document()
devtools::load_all(".")
q()
